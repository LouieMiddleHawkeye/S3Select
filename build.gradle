plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.hawkeyeinnovations.hawkeye-gradle-plugin'
}

sourceCompatibility = JavaVersion.VERSION_14
targetCompatibility = JavaVersion.VERSION_14

dependencies {
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springdoc:springdoc-openapi-ui:${springDocVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation "org.slf4j:slf4j-api"

    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
    implementation "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"

    implementation platform("software.amazon.awssdk:bom:${awsSdkVersion}")
    implementation 'software.amazon.awssdk:s3'

    implementation "com.hawkeyeinnovations:DataConnections:${dataConnectionsVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.hamcrest:hamcrest"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

springBoot {
    buildInfo()
}

bootJar {
    manifest {
        attributes("Implementation-Version": project.version)
    }
}

publishing {
    publications {
        apiJar(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    publish {
        defaults {
            publications(publishing.publications.names.toArray())
        }
    }
}

test {
    useJUnitPlatform()
}